===========================
(0, 'a')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!a, a, ]

Elementary sets: 
[!a, ], 
[a, ], 


GNBA initial:  [1]
GNBA final:  []
Node 0 : [
!a,
]
props: []
Next: set()

Node 1 : [
a,
]
props: [a, ]
Next: set()

===========================
(3, '(G(!c))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!c, false, !(true U c), true, c, (true U c), ]

Elementary sets: 
[!c, !(true U c), true, ], 
[!c, true, (true U c), ], 
[true, c, (true U c), ], 


GNBA initial:  [0]
GNBA final:  [[0, 2]]
Node 0 : [
!c,
!(true U c),
true,
]
props: [true, ]
Next: {0}

Node 1 : [
!c,
true,
(true U c),
]
props: [true, ]
Next: {1, 2}

Node 2 : [
true,
c,
(true U c),
]
props: [true, c, ]
Next: {0, 1, 2}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
===========================
(3, '(F(Gb))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!b, false, (true U !b), !(true U !(true U !b)), true, b, !(true U !b), (true U !(true U !b)), ]

Elementary sets: 
[!b, (true U !b), !(true U !(true U !b)), true, ], 
[(true U !b), !(true U !(true U !b)), true, b, ], 
[!b, (true U !b), true, (true U !(true U !b)), ], 
[(true U !b), true, b, (true U !(true U !b)), ], 
[true, b, !(true U !b), (true U !(true U !b)), ], 


GNBA initial:  [2, 3, 4]
GNBA final:  [[0, 2, 4], [0, 1, 4]]
Node 0 : [
!b,
(true U !b),
!(true U !(true U !b)),
true,
]
props: [true, ]
Next: {0, 1, 2, 3, 4}

Node 1 : [
(true U !b),
!(true U !(true U !b)),
true,
b,
]
props: [true, b, ]
Next: {0, 1, 2, 3}

Node 2 : [
!b,
(true U !b),
true,
(true U !(true U !b)),
]
props: [true, ]
Next: {0, 1, 2, 3, 4}

Node 3 : [
(true U !b),
true,
b,
(true U !(true U !b)),
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4}

Node 4 : [
true,
b,
!(true U !b),
(true U !(true U !b)),
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 0 , 0 )
[(1, (1, 0))(3, (1, 0))]
Node( 0 , 1 )
[(3, (1, 1))(1, (1, 1))]
Node( 0 , 2 )
[(1, (1, 2))(3, (1, 2))]
Node( 0 , 3 )
[(1, (1, 3))(3, (1, 3))]
Node( 0 , 4 )
[(1, (1, 4))(3, (1, 4))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 1 , 0 )
[(4, (1, 0))]
Node( 1 , 1 )
[(4, (1, 1))]
Node( 1 , 2 )
[(4, (1, 2))]
Node( 1 , 3 )
[(4, (1, 3))]
Node( 1 , 4 )
[(4, (1, 4))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 2 , 0 )
[(1, (1, 0))]
Node( 2 , 1 )
[(1, (1, 1))]
Node( 2 , 2 )
[(1, (1, 2))]
Node( 2 , 3 )
[(1, (1, 3))]
Node( 2 , 4 )
[(1, (1, 4))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 3 , 0 )
[(1, (1, 0))]
Node( 3 , 1 )
[(1, (1, 1))]
Node( 3 , 2 )
[(1, (1, 2))]
Node( 3 , 3 )
[(1, (1, 3))]
Node( 3 , 4 )
[(1, (1, 4))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 4 , 0 )
[(5, (1, 0))(1, (1, 0))]
Node( 4 , 1 )
[(1, (1, 1))(5, (1, 1))]
Node( 4 , 2 )
[(5, (1, 2))(1, (1, 2))]
Node( 4 , 3 )
[(5, (1, 3))(1, (1, 3))]
Node( 4 , 4 )
[(1, (1, 4))(5, (1, 4))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
Node( 5 , 0 )
[(1, (1, 0))(2, (1, 0))]
Node( 5 , 1 )
[(2, (1, 1))(1, (1, 1))]
Node( 5 , 2 )
[(1, (1, 2))(2, (1, 2))]
Node( 5 , 3 )
[(1, (1, 3))(2, (1, 3))]
Node( 5 , 4 )
[(2, (1, 4))(1, (1, 4))]
===========================
(2, '((b->a)/\\(Fc))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!c, !b, !(b /\ !a), false, a, !(true U c), true, (!(b /\ !a) /\ (true U c)), !a, b, (b /\ !a), c, !(!(b /\ !a) /\ (true U c)), (true U c), ]

Elementary sets: 
[!c, !b, !(b /\ !a), a, !(true U c), true, !(!(b /\ !a) /\ (true U c)), ], 
[!c, !b, !(b /\ !a), !(true U c), true, !a, !(!(b /\ !a) /\ (true U c)), ], 
[!c, !(b /\ !a), a, !(true U c), true, b, !(!(b /\ !a) /\ (true U c)), ], 
[!c, !(true U c), true, !a, b, (b /\ !a), !(!(b /\ !a) /\ (true U c)), ], 
[!c, !b, !(b /\ !a), a, true, (!(b /\ !a) /\ (true U c)), (true U c), ], 
[!c, !b, !(b /\ !a), true, (!(b /\ !a) /\ (true U c)), !a, (true U c), ], 
[!c, !(b /\ !a), a, true, (!(b /\ !a) /\ (true U c)), b, (true U c), ], 
[!b, !(b /\ !a), a, true, (!(b /\ !a) /\ (true U c)), c, (true U c), ], 
[!b, !(b /\ !a), true, (!(b /\ !a) /\ (true U c)), !a, c, (true U c), ], 
[!(b /\ !a), a, true, (!(b /\ !a) /\ (true U c)), b, c, (true U c), ], 
[!c, true, !a, b, (b /\ !a), !(!(b /\ !a) /\ (true U c)), (true U c), ], 
[true, !a, b, (b /\ !a), c, !(!(b /\ !a) /\ (true U c)), (true U c), ], 


GNBA initial:  [4, 5, 6, 7, 8, 9]
GNBA final:  [[0, 1, 2, 3, 7, 8, 9, 11]]
Node 0 : [
!c,
!b,
!(b /\ !a),
a,
!(true U c),
true,
!(!(b /\ !a) /\ (true U c)),
]
props: [a, true, ]
Next: {0, 1, 2, 3}

Node 1 : [
!c,
!b,
!(b /\ !a),
!(true U c),
true,
!a,
!(!(b /\ !a) /\ (true U c)),
]
props: [true, ]
Next: {0, 1, 2, 3}

Node 2 : [
!c,
!(b /\ !a),
a,
!(true U c),
true,
b,
!(!(b /\ !a) /\ (true U c)),
]
props: [a, true, b, ]
Next: {0, 1, 2, 3}

Node 3 : [
!c,
!(true U c),
true,
!a,
b,
(b /\ !a),
!(!(b /\ !a) /\ (true U c)),
]
props: [true, b, ]
Next: {0, 1, 2, 3}

Node 4 : [
!c,
!b,
!(b /\ !a),
a,
true,
(!(b /\ !a) /\ (true U c)),
(true U c),
]
props: [a, true, ]
Next: {4, 5, 6, 7, 8, 9, 10, 11}

Node 5 : [
!c,
!b,
!(b /\ !a),
true,
(!(b /\ !a) /\ (true U c)),
!a,
(true U c),
]
props: [true, ]
Next: {4, 5, 6, 7, 8, 9, 10, 11}

Node 6 : [
!c,
!(b /\ !a),
a,
true,
(!(b /\ !a) /\ (true U c)),
b,
(true U c),
]
props: [a, true, b, ]
Next: {4, 5, 6, 7, 8, 9, 10, 11}

Node 7 : [
!b,
!(b /\ !a),
a,
true,
(!(b /\ !a) /\ (true U c)),
c,
(true U c),
]
props: [a, true, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 8 : [
!b,
!(b /\ !a),
true,
(!(b /\ !a) /\ (true U c)),
!a,
c,
(true U c),
]
props: [true, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 9 : [
!(b /\ !a),
a,
true,
(!(b /\ !a) /\ (true U c)),
b,
c,
(true U c),
]
props: [a, true, b, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 10 : [
!c,
true,
!a,
b,
(b /\ !a),
!(!(b /\ !a) /\ (true U c)),
(true U c),
]
props: [true, b, ]
Next: {4, 5, 6, 7, 8, 9, 10, 11}

Node 11 : [
true,
!a,
b,
(b /\ !a),
c,
!(!(b /\ !a) /\ (true U c)),
(true U c),
]
props: [true, b, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 0 , 5 )
[(1, (0, 5))(3, (0, 5))]
Node( 0 , 6 )
[(1, (0, 6))(3, (0, 6))]
Node( 0 , 7 )
[(3, (0, 7))(1, (0, 7))]
Node( 0 , 8 )
[(1, (0, 8))(3, (0, 8))]
Node( 0 , 9 )
[(1, (0, 9))(3, (0, 9))]
Node( 0 , 10 )
[(1, (0, 10))(3, (0, 10))]
Node( 0 , 11 )
[(3, (0, 11))(1, (0, 11))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 1 , 5 )
[(4, (0, 5))]
Node( 1 , 6 )
[(4, (0, 6))]
Node( 1 , 7 )
[(4, (0, 7))]
Node( 1 , 8 )
[(4, (0, 8))]
Node( 1 , 9 )
[(4, (0, 9))]
Node( 1 , 10 )
[(4, (0, 10))]
Node( 1 , 11 )
[(4, (0, 11))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 2 , 5 )
[(1, (0, 5))]
Node( 2 , 6 )
[(1, (0, 6))]
Node( 2 , 7 )
[(1, (0, 7))]
Node( 2 , 8 )
[(1, (0, 8))]
Node( 2 , 9 )
[(1, (0, 9))]
Node( 2 , 10 )
[(1, (0, 10))]
Node( 2 , 11 )
[(1, (0, 11))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 3 , 5 )
[(1, (0, 5))]
Node( 3 , 6 )
[(1, (0, 6))]
Node( 3 , 7 )
[(1, (0, 7))]
Node( 3 , 8 )
[(1, (0, 8))]
Node( 3 , 9 )
[(1, (0, 9))]
Node( 3 , 10 )
[(1, (0, 10))]
Node( 3 , 11 )
[(1, (0, 11))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 4 , 5 )
[(1, (0, 5))(5, (0, 5))]
Node( 4 , 6 )
[(1, (0, 6))(5, (0, 6))]
Node( 4 , 7 )
[(1, (0, 7))(5, (0, 7))]
Node( 4 , 8 )
[(5, (0, 8))(1, (0, 8))]
Node( 4 , 9 )
[(1, (0, 9))(5, (0, 9))]
Node( 4 , 10 )
[(1, (0, 10))(5, (0, 10))]
Node( 4 , 11 )
[(1, (0, 11))(5, (0, 11))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
Node( 5 , 5 )
[(1, (0, 5))(2, (0, 5))]
Node( 5 , 6 )
[(1, (0, 6))(2, (0, 6))]
Node( 5 , 7 )
[(2, (0, 7))(1, (0, 7))]
Node( 5 , 8 )
[(1, (0, 8))(2, (0, 8))]
Node( 5 , 9 )
[(2, (0, 9))(1, (0, 9))]
Node( 5 , 10 )
[(1, (0, 10))(2, (0, 10))]
Node( 5 , 11 )
[(2, (0, 11))(1, (0, 11))]
===========================
(5, '((Gb)\\/(Xb))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!X(b), !((true U !b) /\ !X(b)), !b, false, (true U !b), true, X(b), ((true U !b) /\ !X(b)), b, !(true U !b), ]

Elementary sets: 
[!((true U !b) /\ !X(b)), !b, (true U !b), true, X(b), ], 
[!X(b), !b, (true U !b), true, ((true U !b) /\ !X(b)), ], 
[!((true U !b) /\ !X(b)), (true U !b), true, X(b), b, ], 
[!X(b), (true U !b), true, ((true U !b) /\ !X(b)), b, ], 
[!X(b), !((true U !b) /\ !X(b)), true, b, !(true U !b), ], 
[!((true U !b) /\ !X(b)), true, X(b), b, !(true U !b), ], 


GNBA initial:  [0, 2, 4, 5]
GNBA final:  [[0, 1, 4, 5]]
Node 0 : [
!((true U !b) /\ !X(b)),
!b,
(true U !b),
true,
X(b),
]
props: [true, ]
Next: {0, 1, 2, 3, 4, 5}

Node 1 : [
!X(b),
!b,
(true U !b),
true,
((true U !b) /\ !X(b)),
]
props: [true, ]
Next: {0, 1, 2, 3, 4, 5}

Node 2 : [
!((true U !b) /\ !X(b)),
(true U !b),
true,
X(b),
b,
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4, 5}

Node 3 : [
!X(b),
(true U !b),
true,
((true U !b) /\ !X(b)),
b,
]
props: [true, b, ]
Next: {0, 1, 2, 3}

Node 4 : [
!X(b),
!((true U !b) /\ !X(b)),
true,
b,
!(true U !b),
]
props: [true, b, ]
Next: {4, 5}

Node 5 : [
!((true U !b) /\ !X(b)),
true,
X(b),
b,
!(true U !b),
]
props: [true, b, ]
Next: {2, 3, 4, 5}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 0 , 5 )
[(1, (0, 5))(3, (0, 5))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 1 , 5 )
[(4, (0, 5))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 2 , 5 )
[(1, (0, 5))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 3 , 5 )
[(1, (0, 5))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 4 , 5 )
[(1, (0, 5))(5, (0, 5))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
Node( 5 , 5 )
[(1, (0, 5))(2, (0, 5))]
===========================
(3, '((b->a)U(Fc))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!(!(b /\ !a) U (true U c)), !c, !b, !(b /\ !a), false, a, !(true U c), true, !a, (!(b /\ !a) U (true U c)), b, (b /\ !a), c, (true U c), ]

Elementary sets: 
[!(!(b /\ !a) U (true U c)), !c, !b, !(b /\ !a), a, !(true U c), true, ], 
[!(!(b /\ !a) U (true U c)), !c, !b, !(b /\ !a), !(true U c), true, !a, ], 
[!c, !b, !(b /\ !a), a, !(true U c), true, (!(b /\ !a) U (true U c)), ], 
[!c, !b, !(b /\ !a), !(true U c), true, !a, (!(b /\ !a) U (true U c)), ], 
[!(!(b /\ !a) U (true U c)), !c, !(b /\ !a), a, !(true U c), true, b, ], 
[!c, !(b /\ !a), a, !(true U c), true, (!(b /\ !a) U (true U c)), b, ], 
[!(!(b /\ !a) U (true U c)), !c, !(true U c), true, !a, b, (b /\ !a), ], 
[!c, !b, !(b /\ !a), a, true, (!(b /\ !a) U (true U c)), (true U c), ], 
[!c, !b, !(b /\ !a), true, !a, (!(b /\ !a) U (true U c)), (true U c), ], 
[!c, !(b /\ !a), a, true, (!(b /\ !a) U (true U c)), b, (true U c), ], 
[!c, true, !a, (!(b /\ !a) U (true U c)), b, (b /\ !a), (true U c), ], 
[!b, !(b /\ !a), a, true, (!(b /\ !a) U (true U c)), c, (true U c), ], 
[!b, !(b /\ !a), true, !a, (!(b /\ !a) U (true U c)), c, (true U c), ], 
[!(b /\ !a), a, true, (!(b /\ !a) U (true U c)), b, c, (true U c), ], 
[true, !a, (!(b /\ !a) U (true U c)), b, (b /\ !a), c, (true U c), ], 


GNBA initial:  [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14]
GNBA final:  [[0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14], [0, 1, 2, 3, 4, 5, 6, 11, 12, 13, 14]]
Node 0 : [
!(!(b /\ !a) U (true U c)),
!c,
!b,
!(b /\ !a),
a,
!(true U c),
true,
]
props: [a, true, ]
Next: {0, 1, 2, 3, 4, 5, 6}

Node 1 : [
!(!(b /\ !a) U (true U c)),
!c,
!b,
!(b /\ !a),
!(true U c),
true,
!a,
]
props: [true, ]
Next: {0, 1, 2, 3, 4, 5, 6}

Node 2 : [
!c,
!b,
!(b /\ !a),
a,
!(true U c),
true,
(!(b /\ !a) U (true U c)),
]
props: [a, true, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 3 : [
!c,
!b,
!(b /\ !a),
!(true U c),
true,
!a,
(!(b /\ !a) U (true U c)),
]
props: [true, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 4 : [
!(!(b /\ !a) U (true U c)),
!c,
!(b /\ !a),
a,
!(true U c),
true,
b,
]
props: [a, true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6}

Node 5 : [
!c,
!(b /\ !a),
a,
!(true U c),
true,
(!(b /\ !a) U (true U c)),
b,
]
props: [a, true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 6 : [
!(!(b /\ !a) U (true U c)),
!c,
!(true U c),
true,
!a,
b,
(b /\ !a),
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 7 : [
!c,
!b,
!(b /\ !a),
a,
true,
(!(b /\ !a) U (true U c)),
(true U c),
]
props: [a, true, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 8 : [
!c,
!b,
!(b /\ !a),
true,
!a,
(!(b /\ !a) U (true U c)),
(true U c),
]
props: [true, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 9 : [
!c,
!(b /\ !a),
a,
true,
(!(b /\ !a) U (true U c)),
b,
(true U c),
]
props: [a, true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 10 : [
!c,
true,
!a,
(!(b /\ !a) U (true U c)),
b,
(b /\ !a),
(true U c),
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 11 : [
!b,
!(b /\ !a),
a,
true,
(!(b /\ !a) U (true U c)),
c,
(true U c),
]
props: [a, true, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 12 : [
!b,
!(b /\ !a),
true,
!a,
(!(b /\ !a) U (true U c)),
c,
(true U c),
]
props: [true, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 13 : [
!(b /\ !a),
a,
true,
(!(b /\ !a) U (true U c)),
b,
c,
(true U c),
]
props: [a, true, b, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node 14 : [
true,
!a,
(!(b /\ !a) U (true U c)),
b,
(b /\ !a),
c,
(true U c),
]
props: [true, b, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 0 , 5 )
[(1, (0, 5))(3, (0, 5))]
Node( 0 , 6 )
[(1, (0, 6))(3, (0, 6))]
Node( 0 , 7 )
[(3, (0, 7))(1, (0, 7))]
Node( 0 , 8 )
[(1, (0, 8))(3, (0, 8))]
Node( 0 , 9 )
[(1, (0, 9))(3, (0, 9))]
Node( 0 , 10 )
[(1, (0, 10))(3, (0, 10))]
Node( 0 , 11 )
[(3, (0, 11))(1, (0, 11))]
Node( 0 , 12 )
[(3, (0, 12))(1, (0, 12))]
Node( 0 , 13 )
[(3, (0, 13))(1, (0, 13))]
Node( 0 , 14 )
[(1, (0, 14))(3, (0, 14))]
Node( 0 , 0 )
[(1, (1, 0))(3, (1, 0))]
Node( 0 , 1 )
[(3, (1, 1))(1, (1, 1))]
Node( 0 , 2 )
[(1, (1, 2))(3, (1, 2))]
Node( 0 , 3 )
[(1, (1, 3))(3, (1, 3))]
Node( 0 , 4 )
[(1, (1, 4))(3, (1, 4))]
Node( 0 , 5 )
[(1, (1, 5))(3, (1, 5))]
Node( 0 , 6 )
[(1, (1, 6))(3, (1, 6))]
Node( 0 , 7 )
[(3, (1, 7))(1, (1, 7))]
Node( 0 , 8 )
[(3, (1, 8))(1, (1, 8))]
Node( 0 , 9 )
[(1, (1, 9))(3, (1, 9))]
Node( 0 , 10 )
[(3, (1, 10))(1, (1, 10))]
Node( 0 , 11 )
[(3, (1, 11))(1, (1, 11))]
Node( 0 , 12 )
[(1, (1, 12))(3, (1, 12))]
Node( 0 , 13 )
[(1, (1, 13))(3, (1, 13))]
Node( 0 , 14 )
[(1, (1, 14))(3, (1, 14))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 1 , 5 )
[(4, (0, 5))]
Node( 1 , 6 )
[(4, (0, 6))]
Node( 1 , 7 )
[(4, (0, 7))]
Node( 1 , 8 )
[(4, (0, 8))]
Node( 1 , 9 )
[(4, (0, 9))]
Node( 1 , 10 )
[(4, (0, 10))]
Node( 1 , 11 )
[(4, (0, 11))]
Node( 1 , 12 )
[(4, (0, 12))]
Node( 1 , 13 )
[(4, (0, 13))]
Node( 1 , 14 )
[(4, (0, 14))]
Node( 1 , 0 )
[(4, (1, 0))]
Node( 1 , 1 )
[(4, (1, 1))]
Node( 1 , 2 )
[(4, (1, 2))]
Node( 1 , 3 )
[(4, (1, 3))]
Node( 1 , 4 )
[(4, (1, 4))]
Node( 1 , 5 )
[(4, (1, 5))]
Node( 1 , 6 )
[(4, (1, 6))]
Node( 1 , 7 )
[(4, (1, 7))]
Node( 1 , 8 )
[(4, (1, 8))]
Node( 1 , 9 )
[(4, (1, 9))]
Node( 1 , 10 )
[(4, (1, 10))]
Node( 1 , 11 )
[(4, (1, 11))]
Node( 1 , 12 )
[(4, (1, 12))]
Node( 1 , 13 )
[(4, (1, 13))]
Node( 1 , 14 )
[(4, (1, 14))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 2 , 5 )
[(1, (0, 5))]
Node( 2 , 6 )
[(1, (0, 6))]
Node( 2 , 7 )
[(1, (0, 7))]
Node( 2 , 8 )
[(1, (0, 8))]
Node( 2 , 9 )
[(1, (0, 9))]
Node( 2 , 10 )
[(1, (0, 10))]
Node( 2 , 11 )
[(1, (0, 11))]
Node( 2 , 12 )
[(1, (0, 12))]
Node( 2 , 13 )
[(1, (0, 13))]
Node( 2 , 14 )
[(1, (0, 14))]
Node( 2 , 0 )
[(1, (1, 0))]
Node( 2 , 1 )
[(1, (1, 1))]
Node( 2 , 2 )
[(1, (1, 2))]
Node( 2 , 3 )
[(1, (1, 3))]
Node( 2 , 4 )
[(1, (1, 4))]
Node( 2 , 5 )
[(1, (1, 5))]
Node( 2 , 6 )
[(1, (1, 6))]
Node( 2 , 7 )
[(1, (1, 7))]
Node( 2 , 8 )
[(1, (1, 8))]
Node( 2 , 9 )
[(1, (1, 9))]
Node( 2 , 10 )
[(1, (1, 10))]
Node( 2 , 11 )
[(1, (1, 11))]
Node( 2 , 12 )
[(1, (1, 12))]
Node( 2 , 13 )
[(1, (1, 13))]
Node( 2 , 14 )
[(1, (1, 14))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 3 , 5 )
[(1, (0, 5))]
Node( 3 , 6 )
[(1, (0, 6))]
Node( 3 , 7 )
[(1, (0, 7))]
Node( 3 , 8 )
[(1, (0, 8))]
Node( 3 , 9 )
[(1, (0, 9))]
Node( 3 , 10 )
[(1, (0, 10))]
Node( 3 , 11 )
[(1, (0, 11))]
Node( 3 , 12 )
[(1, (0, 12))]
Node( 3 , 13 )
[(1, (0, 13))]
Node( 3 , 14 )
[(1, (0, 14))]
Node( 3 , 0 )
[(1, (1, 0))]
Node( 3 , 1 )
[(1, (1, 1))]
Node( 3 , 2 )
[(1, (1, 2))]
Node( 3 , 3 )
[(1, (1, 3))]
Node( 3 , 4 )
[(1, (1, 4))]
Node( 3 , 5 )
[(1, (1, 5))]
Node( 3 , 6 )
[(1, (1, 6))]
Node( 3 , 7 )
[(1, (1, 7))]
Node( 3 , 8 )
[(1, (1, 8))]
Node( 3 , 9 )
[(1, (1, 9))]
Node( 3 , 10 )
[(1, (1, 10))]
Node( 3 , 11 )
[(1, (1, 11))]
Node( 3 , 12 )
[(1, (1, 12))]
Node( 3 , 13 )
[(1, (1, 13))]
Node( 3 , 14 )
[(1, (1, 14))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 4 , 5 )
[(1, (0, 5))(5, (0, 5))]
Node( 4 , 6 )
[(1, (0, 6))(5, (0, 6))]
Node( 4 , 7 )
[(1, (0, 7))(5, (0, 7))]
Node( 4 , 8 )
[(5, (0, 8))(1, (0, 8))]
Node( 4 , 9 )
[(1, (0, 9))(5, (0, 9))]
Node( 4 , 10 )
[(1, (0, 10))(5, (0, 10))]
Node( 4 , 11 )
[(1, (0, 11))(5, (0, 11))]
Node( 4 , 12 )
[(1, (0, 12))(5, (0, 12))]
Node( 4 , 13 )
[(1, (0, 13))(5, (0, 13))]
Node( 4 , 14 )
[(5, (0, 14))(1, (0, 14))]
Node( 4 , 0 )
[(5, (1, 0))(1, (1, 0))]
Node( 4 , 1 )
[(1, (1, 1))(5, (1, 1))]
Node( 4 , 2 )
[(5, (1, 2))(1, (1, 2))]
Node( 4 , 3 )
[(5, (1, 3))(1, (1, 3))]
Node( 4 , 4 )
[(1, (1, 4))(5, (1, 4))]
Node( 4 , 5 )
[(5, (1, 5))(1, (1, 5))]
Node( 4 , 6 )
[(1, (1, 6))(5, (1, 6))]
Node( 4 , 7 )
[(1, (1, 7))(5, (1, 7))]
Node( 4 , 8 )
[(1, (1, 8))(5, (1, 8))]
Node( 4 , 9 )
[(5, (1, 9))(1, (1, 9))]
Node( 4 , 10 )
[(1, (1, 10))(5, (1, 10))]
Node( 4 , 11 )
[(1, (1, 11))(5, (1, 11))]
Node( 4 , 12 )
[(5, (1, 12))(1, (1, 12))]
Node( 4 , 13 )
[(5, (1, 13))(1, (1, 13))]
Node( 4 , 14 )
[(5, (1, 14))(1, (1, 14))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
Node( 5 , 5 )
[(1, (0, 5))(2, (0, 5))]
Node( 5 , 6 )
[(1, (0, 6))(2, (0, 6))]
Node( 5 , 7 )
[(2, (0, 7))(1, (0, 7))]
Node( 5 , 8 )
[(1, (0, 8))(2, (0, 8))]
Node( 5 , 9 )
[(2, (0, 9))(1, (0, 9))]
Node( 5 , 10 )
[(1, (0, 10))(2, (0, 10))]
Node( 5 , 11 )
[(2, (0, 11))(1, (0, 11))]
Node( 5 , 12 )
[(2, (0, 12))(1, (0, 12))]
Node( 5 , 13 )
[(1, (0, 13))(2, (0, 13))]
Node( 5 , 14 )
[(1, (0, 14))(2, (0, 14))]
Node( 5 , 0 )
[(1, (1, 0))(2, (1, 0))]
Node( 5 , 1 )
[(2, (1, 1))(1, (1, 1))]
Node( 5 , 2 )
[(1, (1, 2))(2, (1, 2))]
Node( 5 , 3 )
[(1, (1, 3))(2, (1, 3))]
Node( 5 , 4 )
[(2, (1, 4))(1, (1, 4))]
Node( 5 , 5 )
[(1, (1, 5))(2, (1, 5))]
Node( 5 , 6 )
[(1, (1, 6))(2, (1, 6))]
Node( 5 , 7 )
[(2, (1, 7))(1, (1, 7))]
Node( 5 , 8 )
[(1, (1, 8))(2, (1, 8))]
Node( 5 , 9 )
[(1, (1, 9))(2, (1, 9))]
Node( 5 , 10 )
[(2, (1, 10))(1, (1, 10))]
Node( 5 , 11 )
[(2, (1, 11))(1, (1, 11))]
Node( 5 , 12 )
[(1, (1, 12))(2, (1, 12))]
Node( 5 , 13 )
[(2, (1, 13))(1, (1, 13))]
Node( 5 , 14 )
[(1, (1, 14))(2, (1, 14))]
===========================
(4, '(G(b/\\c))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!(b /\ c), !c, !b, false, (true U !(b /\ c)), true, c, b, (b /\ c), !(true U !(b /\ c)), ]

Elementary sets: 
[!(b /\ c), !c, !b, (true U !(b /\ c)), true, ], 
[!(b /\ c), !b, (true U !(b /\ c)), true, c, ], 
[!(b /\ c), !c, (true U !(b /\ c)), true, b, ], 
[(true U !(b /\ c)), true, c, b, (b /\ c), ], 
[true, c, b, (b /\ c), !(true U !(b /\ c)), ], 


GNBA initial:  [4]
GNBA final:  [[0, 1, 2, 4]]
Node 0 : [
!(b /\ c),
!c,
!b,
(true U !(b /\ c)),
true,
]
props: [true, ]
Next: {0, 1, 2, 3, 4}

Node 1 : [
!(b /\ c),
!b,
(true U !(b /\ c)),
true,
c,
]
props: [true, c, ]
Next: {0, 1, 2, 3, 4}

Node 2 : [
!(b /\ c),
!c,
(true U !(b /\ c)),
true,
b,
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4}

Node 3 : [
(true U !(b /\ c)),
true,
c,
b,
(b /\ c),
]
props: [true, c, b, ]
Next: {0, 1, 2, 3}

Node 4 : [
true,
c,
b,
(b /\ c),
!(true U !(b /\ c)),
]
props: [true, c, b, ]
Next: {4}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
===========================
(1, '((c/\\c)\\/(c\\/c))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!(!c /\ !c), (!(c /\ c) /\ (!c /\ !c)), !c, !(c /\ c), !(!(c /\ c) /\ (!c /\ !c)), (!c /\ !c), c, (c /\ c), ]

Elementary sets: 
[(!(c /\ c) /\ (!c /\ !c)), !c, !(c /\ c), (!c /\ !c), ], 
[!(!c /\ !c), !(!(c /\ c) /\ (!c /\ !c)), c, (c /\ c), ], 


GNBA initial:  [1]
GNBA final:  []
Node 0 : [
(!(c /\ c) /\ (!c /\ !c)),
!c,
!(c /\ c),
(!c /\ !c),
]
props: []
Next: set()

Node 1 : [
!(!c /\ !c),
!(!(c /\ c) /\ (!c /\ !c)),
c,
(c /\ c),
]
props: [c, ]
Next: set()

===========================
(5, '((Fa)/\\(b/\\b))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[!((true U a) /\ (b /\ b)), !(b /\ b), !b, false, a, true, (true U a), ((true U a) /\ (b /\ b)), !a, b, (b /\ b), !(true U a), ]

Elementary sets: 
[!((true U a) /\ (b /\ b)), !(b /\ b), !b, a, true, (true U a), ], 
[!((true U a) /\ (b /\ b)), !(b /\ b), !b, true, (true U a), !a, ], 
[a, true, (true U a), ((true U a) /\ (b /\ b)), b, (b /\ b), ], 
[true, (true U a), ((true U a) /\ (b /\ b)), !a, b, (b /\ b), ], 
[!((true U a) /\ (b /\ b)), !(b /\ b), !b, true, !a, !(true U a), ], 
[!((true U a) /\ (b /\ b)), true, !a, b, (b /\ b), !(true U a), ], 


GNBA initial:  [2, 3]
GNBA final:  [[0, 2, 4, 5]]
Node 0 : [
!((true U a) /\ (b /\ b)),
!(b /\ b),
!b,
a,
true,
(true U a),
]
props: [a, true, ]
Next: {0, 1, 2, 3, 4, 5}

Node 1 : [
!((true U a) /\ (b /\ b)),
!(b /\ b),
!b,
true,
(true U a),
!a,
]
props: [true, ]
Next: {0, 1, 2, 3}

Node 2 : [
a,
true,
(true U a),
((true U a) /\ (b /\ b)),
b,
(b /\ b),
]
props: [a, true, b, ]
Next: {0, 1, 2, 3, 4, 5}

Node 3 : [
true,
(true U a),
((true U a) /\ (b /\ b)),
!a,
b,
(b /\ b),
]
props: [true, b, ]
Next: {0, 1, 2, 3}

Node 4 : [
!((true U a) /\ (b /\ b)),
!(b /\ b),
!b,
true,
!a,
!(true U a),
]
props: [true, ]
Next: {4, 5}

Node 5 : [
!((true U a) /\ (b /\ b)),
true,
!a,
b,
(b /\ b),
!(true U a),
]
props: [true, b, ]
Next: {4, 5}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 0 , 5 )
[(1, (0, 5))(3, (0, 5))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 1 , 5 )
[(4, (0, 5))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 2 , 5 )
[(1, (0, 5))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 3 , 5 )
[(1, (0, 5))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 4 , 5 )
[(1, (0, 5))(5, (0, 5))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
Node( 5 , 5 )
[(1, (0, 5))(2, (0, 5))]
===========================
(3, '((c/\\b)->(Fa))')
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Closure: 
[((c /\ b) /\ !(true U a)), !(c /\ b), !c, !b, false, a, true, (true U a), !((c /\ b) /\ !(true U a)), !a, c, b, (c /\ b), !(true U a), ]

Elementary sets: 
[!(c /\ b), !c, !b, a, true, (true U a), !((c /\ b) /\ !(true U a)), ], 
[!(c /\ b), !c, !b, true, (true U a), !((c /\ b) /\ !(true U a)), !a, ], 
[!(c /\ b), !b, a, true, (true U a), !((c /\ b) /\ !(true U a)), c, ], 
[!(c /\ b), !b, true, (true U a), !((c /\ b) /\ !(true U a)), !a, c, ], 
[!(c /\ b), !c, a, true, (true U a), !((c /\ b) /\ !(true U a)), b, ], 
[!(c /\ b), !c, true, (true U a), !((c /\ b) /\ !(true U a)), !a, b, ], 
[a, true, (true U a), !((c /\ b) /\ !(true U a)), c, b, (c /\ b), ], 
[true, (true U a), !((c /\ b) /\ !(true U a)), !a, c, b, (c /\ b), ], 
[!(c /\ b), !c, !b, true, !((c /\ b) /\ !(true U a)), !a, !(true U a), ], 
[!(c /\ b), !b, true, !((c /\ b) /\ !(true U a)), !a, c, !(true U a), ], 
[!(c /\ b), !c, true, !((c /\ b) /\ !(true U a)), !a, b, !(true U a), ], 
[((c /\ b) /\ !(true U a)), true, !a, c, b, (c /\ b), !(true U a), ], 


GNBA initial:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
GNBA final:  [[0, 2, 4, 6, 8, 9, 10, 11]]
Node 0 : [
!(c /\ b),
!c,
!b,
a,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
]
props: [a, true, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 1 : [
!(c /\ b),
!c,
!b,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
!a,
]
props: [true, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7}

Node 2 : [
!(c /\ b),
!b,
a,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
c,
]
props: [a, true, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 3 : [
!(c /\ b),
!b,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
!a,
c,
]
props: [true, c, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7}

Node 4 : [
!(c /\ b),
!c,
a,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
b,
]
props: [a, true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 5 : [
!(c /\ b),
!c,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
!a,
b,
]
props: [true, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7}

Node 6 : [
a,
true,
(true U a),
!((c /\ b) /\ !(true U a)),
c,
b,
(c /\ b),
]
props: [a, true, c, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}

Node 7 : [
true,
(true U a),
!((c /\ b) /\ !(true U a)),
!a,
c,
b,
(c /\ b),
]
props: [true, c, b, ]
Next: {0, 1, 2, 3, 4, 5, 6, 7}

Node 8 : [
!(c /\ b),
!c,
!b,
true,
!((c /\ b) /\ !(true U a)),
!a,
!(true U a),
]
props: [true, ]
Next: {8, 9, 10, 11}

Node 9 : [
!(c /\ b),
!b,
true,
!((c /\ b) /\ !(true U a)),
!a,
c,
!(true U a),
]
props: [true, c, ]
Next: {8, 9, 10, 11}

Node 10 : [
!(c /\ b),
!c,
true,
!((c /\ b) /\ !(true U a)),
!a,
b,
!(true U a),
]
props: [true, b, ]
Next: {8, 9, 10, 11}

Node 11 : [
((c /\ b) /\ !(true U a)),
true,
!a,
c,
b,
(c /\ b),
!(true U a),
]
props: [true, c, b, ]
Next: {8, 9, 10, 11}

Node( 0 , 0 )
[(3, (0, 0))(1, (0, 0))]
Node( 0 , 1 )
[(1, (0, 1))(3, (0, 1))]
Node( 0 , 2 )
[(3, (0, 2))(1, (0, 2))]
Node( 0 , 3 )
[(1, (0, 3))(3, (0, 3))]
Node( 0 , 4 )
[(1, (0, 4))(3, (0, 4))]
Node( 0 , 5 )
[(1, (0, 5))(3, (0, 5))]
Node( 0 , 6 )
[(1, (0, 6))(3, (0, 6))]
Node( 0 , 7 )
[(3, (0, 7))(1, (0, 7))]
Node( 0 , 8 )
[(1, (0, 8))(3, (0, 8))]
Node( 0 , 9 )
[(1, (0, 9))(3, (0, 9))]
Node( 0 , 10 )
[(1, (0, 10))(3, (0, 10))]
Node( 0 , 11 )
[(3, (0, 11))(1, (0, 11))]
Node( 1 , 0 )
[(4, (0, 0))]
Node( 1 , 1 )
[(4, (0, 1))]
Node( 1 , 2 )
[(4, (0, 2))]
Node( 1 , 3 )
[(4, (0, 3))]
Node( 1 , 4 )
[(4, (0, 4))]
Node( 1 , 5 )
[(4, (0, 5))]
Node( 1 , 6 )
[(4, (0, 6))]
Node( 1 , 7 )
[(4, (0, 7))]
Node( 1 , 8 )
[(4, (0, 8))]
Node( 1 , 9 )
[(4, (0, 9))]
Node( 1 , 10 )
[(4, (0, 10))]
Node( 1 , 11 )
[(4, (0, 11))]
Node( 2 , 0 )
[(1, (0, 0))]
Node( 2 , 1 )
[(1, (0, 1))]
Node( 2 , 2 )
[(1, (0, 2))]
Node( 2 , 3 )
[(1, (0, 3))]
Node( 2 , 4 )
[(1, (0, 4))]
Node( 2 , 5 )
[(1, (0, 5))]
Node( 2 , 6 )
[(1, (0, 6))]
Node( 2 , 7 )
[(1, (0, 7))]
Node( 2 , 8 )
[(1, (0, 8))]
Node( 2 , 9 )
[(1, (0, 9))]
Node( 2 , 10 )
[(1, (0, 10))]
Node( 2 , 11 )
[(1, (0, 11))]
Node( 3 , 0 )
[(1, (0, 0))]
Node( 3 , 1 )
[(1, (0, 1))]
Node( 3 , 2 )
[(1, (0, 2))]
Node( 3 , 3 )
[(1, (0, 3))]
Node( 3 , 4 )
[(1, (0, 4))]
Node( 3 , 5 )
[(1, (0, 5))]
Node( 3 , 6 )
[(1, (0, 6))]
Node( 3 , 7 )
[(1, (0, 7))]
Node( 3 , 8 )
[(1, (0, 8))]
Node( 3 , 9 )
[(1, (0, 9))]
Node( 3 , 10 )
[(1, (0, 10))]
Node( 3 , 11 )
[(1, (0, 11))]
Node( 4 , 0 )
[(1, (0, 0))(5, (0, 0))]
Node( 4 , 1 )
[(5, (0, 1))(1, (0, 1))]
Node( 4 , 2 )
[(1, (0, 2))(5, (0, 2))]
Node( 4 , 3 )
[(1, (0, 3))(5, (0, 3))]
Node( 4 , 4 )
[(5, (0, 4))(1, (0, 4))]
Node( 4 , 5 )
[(1, (0, 5))(5, (0, 5))]
Node( 4 , 6 )
[(1, (0, 6))(5, (0, 6))]
Node( 4 , 7 )
[(1, (0, 7))(5, (0, 7))]
Node( 4 , 8 )
[(5, (0, 8))(1, (0, 8))]
Node( 4 , 9 )
[(1, (0, 9))(5, (0, 9))]
Node( 4 , 10 )
[(1, (0, 10))(5, (0, 10))]
Node( 4 , 11 )
[(1, (0, 11))(5, (0, 11))]
Node( 5 , 0 )
[(2, (0, 0))(1, (0, 0))]
Node( 5 , 1 )
[(1, (0, 1))(2, (0, 1))]
Node( 5 , 2 )
[(1, (0, 2))(2, (0, 2))]
Node( 5 , 3 )
[(2, (0, 3))(1, (0, 3))]
Node( 5 , 4 )
[(1, (0, 4))(2, (0, 4))]
Node( 5 , 5 )
[(1, (0, 5))(2, (0, 5))]
Node( 5 , 6 )
[(1, (0, 6))(2, (0, 6))]
Node( 5 , 7 )
[(2, (0, 7))(1, (0, 7))]
Node( 5 , 8 )
[(1, (0, 8))(2, (0, 8))]
Node( 5 , 9 )
[(2, (0, 9))(1, (0, 9))]
Node( 5 , 10 )
[(1, (0, 10))(2, (0, 10))]
Node( 5 , 11 )
[(2, (0, 11))(1, (0, 11))]
[True, True, True, True, True, True, True, True, True, True]
